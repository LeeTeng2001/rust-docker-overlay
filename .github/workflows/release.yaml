name: Publish Crate

on:
  release:
    types: [published]   # only when a GitHub Release is published

permissions:
  contents: write
  issues: read
  actions: read

jobs:
  publish:
    name: Publish for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name:
          - linux-x86-gnu
          - linux-x86-musl
          - linux-arm-gnu
          - linux-arm-musl
        include:
          - name: linux-x86-gnu
            os: ubuntu-latest
            family: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            asset: hl-linux-x86_64-gnu.tar.gz
          - name: linux-x86-musl
            os: ubuntu-latest
            family: linux
            arch: x86_64
            target: x86_64-unknown-linux-musl
            asset: hl-linux-x86_64-musl.tar.gz
            cross: true
          - name: linux-arm-gnu
            os: ubuntu-latest
            family: linux
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            asset: hl-linux-arm64-gnu.tar.gz
            cross: true
          - name: linux-arm-musl
            os: ubuntu-latest
            family: linux
            arch: aarch64
            target: aarch64-unknown-linux-musl
            asset: hl-linux-arm64-musl.tar.gz
            cross: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo registry + index + build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Cross
        if: matrix.cross
        run: |
          cargo install cross
          echo "CARGO=cross" >> $GITHUB_ENV
      - name: Add Target
        if: matrix.cross == false && matrix.target != ''
        run: |
          rustup target add ${{ matrix.target }}
      - name: Build
        env:
          PROGRAM_VERSION: ${{ github.event.release.tag_name }}
        run: echo ${{ matrix.target }} | xargs -n 1 ${{ env.CARGO }} build --release --locked --verbose --target
      - name: Package using `tar`
        run: tar -C ./target/${{ matrix.target }}/release -cz -f ${{ matrix.asset }} hl
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset }}
          tag: ${{ github.ref }}
